<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:parancoe="http://www.parancoe.org/schema/parancoe"
       xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.parancoe.org/schema/parancoe http://www.parancoe.org/schema/parancoe.xsd
       http://www.directwebremoting.org/schema/spring-dwr http://www.directwebremoting.org/schema/spring-dwr-2.0.xsd"
       default-lazy-init="false" >
    
    <!-- ...if you need to define explicitly a DAO
    <parancoe:dao interface="it.jugpadova.dao.PersonDao"/>
    -->    
    <!-- Authomatic DAO definition from persistent classes -->
    <parancoe:define-daos basePackage="it.jugpadova"/>
    
    <bean id="personBO" class="it.jugpadova.blo.PersonBo">
        <property name="dao" ref="personDao"/>
        <dwr:remote javascript="personBO">
            <dwr:include method="populateArchive"/>
            <dwr:include method="retrievePerson"/>
            <dwr:include method="showPerson"/>
        </dwr:remote>
    </bean>    
    
    <bean id="eventBO" class="it.jugpadova.blo.EventBo" autowire="byType">
        <dwr:remote javascript="eventBo">
            <dwr:include method="findPartialLocation"/>
            <dwr:include method="copyDirectionsFromEvent"/>
        </dwr:remote>
    </bean>
    
    <bean id="filterBO" class="it.jugpadova.blo.FilterBo" autowire="byType">
        <dwr:remote javascript="filterBo">
            <dwr:include method="populatePreview"/>
        </dwr:remote>
    </bean>
    
    <bean id="juggerBlo" class="it.jugpadova.blo.JuggerBlo" autowire="byType"/>
    
    <bean id="daos" parent="abstractDaoProvider">
        <property name="proxyInterfaces">
            <value>it.jugpadova.Daos</value>
        </property>
        <property name="target">
            <bean parent="genericDaoProvider"/>
        </property>
    </bean>
    
    <bean id="blos" class="it.jugpadova.Blos" autowire="byType"/>
    
    <bean name="/home/*.html" id="homeController"
          class="it.jugpadova.controllers.HomeController" parent="abstractController"/>
    <bean name="/admin/*.html" id="adminController"
          class="it.jugpadova.controllers.AdminController" parent="abstractController"/>
    <bean name="/people/*.html" id="peopleController"
          class="it.jugpadova.controllers.PeopleController" parent="abstractController"/>
    <bean name="/event/*.html" id="eventController"
          class="it.jugpadova.controllers.EventController" parent="abstractController"/>
    <bean name="/jugger/*.html" id="juggerController"
          class="it.jugpadova.controllers.JuggerController" parent="abstractController"/>
    
    <bean name="/people/edit.form" id="peopleEditController"
          class="it.jugpadova.controllers.PeopleEditController"
          parent="abstractController">
        <property name="commandClass" value="it.jugpadova.po.Person"/>
        <property name="commandName" value="person"/>
        <property name="formView" value="people/edit"/>
        <property name="successView" value="redirect:list.html"/>
    </bean>
    
    <bean name="/event/edit.form" id="eventEditController"
          class="it.jugpadova.controllers.EventEditController"
          parent="abstractController">
        <property name="commandClass" value="it.jugpadova.po.Event"/>
        <property name="commandName" value="event"/>
        <property name="formView" value="event/edit"/>
        <property name="successView" value="redirect:list.html"/>
    </bean>
    
    <bean name="/event/registration.form" id="registrationController"
          class="it.jugpadova.controllers.ParticipantRegistrationController"
          parent="abstractController">
        <property name="commandClass" value="it.jugpadova.bean.Registration"/>
        <property name="commandName" value="registration"/>
        <property name="formView" value="event/registration"/>
        <property name="successView" value="redirect:list.html"/>
        <property name="captchaService" ref="captchaService"/>
    </bean>
    
    <!--  begin security section -->
    <!-- secure porpouse -->
    <bean name="/*.secure" id="secureController"
          class="org.parancoe.plugins.security.SecureController" />
    
    <bean name="pluginSecurityFilterDefinitions" class="java.lang.String">
        <constructor-arg>
            <value>
                CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
                PATTERN_TYPE_APACHE_ANT
                /people/**=ROLE_ADMIN, ROLE_PARANCOE
                /event/edit*=ROLE_ADMIN, ROLE_JUGGER
                /event/delete*=ROLE_ADMIN, ROLE_JUGGER
                /event/participants*=ROLE_ADMIN, ROLE_JUGGER
                /admin/**=ROLE_ADMIN
                /**=IS_AUTHENTICATED_ANONYMOUSLY
            </value>
        </constructor-arg>
    </bean>    
    <!--  end security section -->

    <!-- begin dwr section -->
    <!-- **WARNING** In production leave commented the following definition for
        the dwrController. It's useful only for debug. In production it's a security hole.
        If debug="true" point your browser to /<your context>/dwr/index.html
    -->    
    <dwr:controller id="dwrController" debug="true"/>
    
    <dwr:configuration>
        <dwr:convert type="bean" class="it.jugpadova.po.Person" />        
    </dwr:configuration>
    <!-- end dwr section -->
    
    <!-- begin jcaptcha section -->
    <bean id="captchaService"
          class="com.octo.captcha.service.multitype.GenericManageableCaptchaService">
        <constructor-arg index="0"><ref bean="imageEngine"/></constructor-arg>
        <constructor-arg index="1"><value>180</value></constructor-arg>
        <constructor-arg index="2"><value>180000</value></constructor-arg>
    </bean>
    
    <bean class="com.octo.captcha.engine.GenericCaptchaEngine" id="imageEngine">
        <constructor-arg index="0">
            <list>
                <ref bean="CaptchaFactory"/>
            </list>
        </constructor-arg>
    </bean>
    
    <bean id="CaptchaFactory" class="com.octo.captcha.image.gimpy.GimpyFactory" >
        <constructor-arg><ref bean="wordgen"/></constructor-arg>
        <constructor-arg><ref bean="wordtoimage"/></constructor-arg>
    </bean>
    
    <bean id="wordgen" class= "com.octo.captcha.component.word.wordgenerator.DictionaryWordGenerator" >
        <constructor-arg><ref bean="filedict"/></constructor-arg>
    </bean>
    
    <bean id="filedict" class="com.octo.captcha.component.word.FileDictionary" >
        <constructor-arg index="0"><value>toddlist</value></constructor-arg>
    </bean>
    
    <bean id="wordtoimage" class="com.octo.captcha.component.image.wordtoimage.ComposedWordToImage" >
        <constructor-arg index="0"><ref bean="fontGenRandom"/></constructor-arg>
        <constructor-arg index="1"><ref bean="backGenUni"/></constructor-arg>
        <constructor-arg index="2"><ref bean="simpleWhitePaster"/></constructor-arg>
    </bean>
    
    <bean id="fontGenRandom" class="com.octo.captcha.component.image.fontgenerator.RandomFontGenerator" >
        <constructor-arg index="0"><value>40</value></constructor-arg>
        <constructor-arg index="1"><value>50</value></constructor-arg>
        <constructor-arg index="2">
            <list>
                <ref bean="fontArial"/>
                <ref bean="fontVerdana"/>
            </list>
        </constructor-arg>
    </bean>
    
    <bean id="fontArial" class="java.awt.Font" >
        <constructor-arg index="0"><value>Arial</value></constructor-arg>
        <constructor-arg index="1"><value>0</value></constructor-arg>
        <constructor-arg index="2"><value>10</value></constructor-arg>
    </bean>
    
    <bean id="fontVerdana" class="java.awt.Font" >
        <constructor-arg index="0"><value>Verdana</value></constructor-arg>
        <constructor-arg index="1"><value>0</value></constructor-arg>
        <constructor-arg index="2"><value>10</value></constructor-arg>
    </bean>
    
    <bean id="backGenUni" class="com.octo.captcha.component.image.backgroundgenerator.UniColorBackgroundGenerator" >
        <constructor-arg index="0"><value>300</value></constructor-arg>
        <constructor-arg index="1"><value>100</value></constructor-arg>
    </bean>
    
    <bean id="simpleWhitePaster" class="com.octo.captcha.component.image.textpaster.SimpleTextPaster" >
        <constructor-arg type="java.lang.Integer" index="0"><value>3</value></constructor-arg>
        <constructor-arg type="java.lang.Integer" index="1"><value>5</value></constructor-arg>
        <constructor-arg type="java.awt.Color" index="2"><ref bean="colorGreen"/></constructor-arg>
    </bean>
    
    <bean id="colorGreen" class="java.awt.Color" >
        <constructor-arg index="0"><value>0</value></constructor-arg>
        <constructor-arg index="1"><value>255</value></constructor-arg>
        <constructor-arg index="2"><value>0</value></constructor-arg>
    </bean>
    
    <bean name="/jcaptcha/*.html" id="jCaptchaController"
          class="it.jugpadova.controllers.JCaptchaController" parent="abstractController">
        <property name="captchaService" ref="captchaService"/>
    </bean>
    <!-- end jcaptcha section -->
    
</beans>