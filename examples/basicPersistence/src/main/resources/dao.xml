<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright 2006 The Parancoe Team

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:parancoe="http://parancoe.dev.java.net/schema/parancoe"       
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://parancoe.dev.java.net/schema/parancoe
       https://jugpadova.dev.java.net/schema/parancoe.xsd">
    
    <!-- The old way
    <bean id="personDao" parent="abstractDao">
        <property name="proxyInterfaces">
            <value>org.parancoe.example.dao.PersonDao</value>
        </property>
        <property name="target">
            <bean parent="hibernateGenericDao"/>
        </property>
    </bean>
-->

    <!-- ...if you need to define explicitly a DAO
    <parancoe:dao interface="org.parancoe.example.dao.PersonDao"/>
    
    <parancoe:dao interface="org.parancoe.example.dao.BookDao"/>
-->
    
    <!-- Authomatic DAO definition from persistent classes -->
    <parancoe:define-daos basePackage="org.parancoe.example"/>
    
</beans>
